<Project Sdk="Microsoft.NET.Sdk">

  <!--
    Copyright 2023 Subatomix Research Inc.
    SPDX-License-Identifier: ISC
  -->

  <PropertyGroup>
    <Description>Database migration and seeding system for SQL Server and Azure SQL Database.</Description>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <GenerateDependencyFile>false</GenerateDependencyFile>
    <PowerShellItemIncludes>$(PowerShellItemIncludes);**/*.sql</PowerShellItemIncludes>
    <PrivateDependenciesPath>..\PSql.Deploy.private\bin\$(Configuration)\$(TargetFramework)\</PrivateDependenciesPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Subatomix.Build.Packaging.PowerShellModule"
                      Version="1.1.1" PrivateAssets="all" />

    <PackageReference Include="System.Management.Automation"
                      Version="[7.0.0, 8.0.0)" PrivateAssets="all" />

    <ProjectReference Include="..\PSql.Deploy.Core\PSql.Deploy.Core.csproj" />

    <ProjectReference Include="..\PSql.Deploy.private\PSql.Deploy.private.csproj"
                      Private="false" PrivateAssets="all" />

    <Reference Include="PSql"
               HintPath="$(PowerShellModuleDirectory)\PSql\$(PSqlVersion)\PSql.dll"
               Private="false" />
  </ItemGroup>

  <ItemGroup>
    <!-- TODO: Move these to PSql.Deploy.private -->
    <PackageReference Include="DependencyQueue" Version="1.0.0-rc.1" />
    <PackageReference Include="Subatomix.PowerShell.TaskHost" Version="1.0.0" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="System.Data" />
    <Using Include="System.Data.Common" />
    <Using Include="System.Management.Automation" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="$(PowerShellItemIncludes)"
             Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />

    <!--
      Isolate PSql dependencies into a subdirectory where .NET Core/5+ default
      probing behavior will not find them.  Instead, custom resolution logic
      will load the dependencies into a private AssemblyLoadContext, preventing
      conflicts with dependencies of other modules.  Technique documented here:
      https://learn.microsoft.com/en-us/powershell/scripting/dev-cross-plat/resolving-dependency-conflicts
    -->

    <Deps Include="$(PrivateDependenciesPath)**"
          Exclude="$(PrivateDependenciesPath)runtimes\**" SubDir="" />

    <None Include="@(Deps)" Link="deps\%(SubDir)%(Filename)%(Extension)"
          CopyToOutputDirectory="PreserveNewest" Visible="true" />
  </ItemGroup>

</Project>
